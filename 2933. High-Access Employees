// Hashmap Problem

import java.util.*;
class Solution {

    public List<String> findHighAccessEmployees(List<List<String>> access_times) {
        Map<String, List<Integer>> timeMap = new HashMap<>();
         List<String> ans = new ArrayList();
        // Store access times for each employee
        for (List<String> entry : access_times) {
            String employee = entry.get(0);
            String time = entry.get(1);
            int numericalTime = Integer.parseInt(time);

            timeMap.computeIfAbsent(employee, k -> new ArrayList<>()).add(numericalTime);
        }

        List<String> result = new ArrayList<>();

        // Iterate through employee access times to find high-access employees
        for (Map.Entry<String, List<Integer>> entrys : timeMap.entrySet()) {
            List<Integer> times = entrys.getValue();
            Collections.sort(times);

            int count = 1;
            for (int i = 0; i < times.size() - 2; i++) {
                int currentTime = times.get(i);
                int nextTime = times.get(i + 2);

                if (nextTime - currentTime<=99 && !result.contains(entrys.getKey())) {
                        result.add(entrys.getKey());
                }
            }
        }

        return result;
    }
}
